% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/app_r6.R
\name{app_data}
\alias{app_data}
\title{R6 Class to get & hold dashboard data}
\value{
Object that contains data required for App & related methods.
}
\description{
Create R6 class object to read in data for App.

`r lifecycle::badge("experimental")`
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{date_range}}{variable to hold start and end date from
dateRangeInput. Note: this is the 'single source of truth' date range
to be used across the App, and is set via dateRangeInput & updated
from 'date_period' input.}

\item{\code{date_period_options}}{variable that holds list of options for the
date_period input.}

\item{\code{date_setter}}{variable indicator if `date_range` has been set via
dateRangeInput or the 'date_period' input. Note: this is required to
prevent circular behavior in the UI, as updating 'date_period' input
also has to update the dateRangeInput input for consistency (see the
details [here](https://github.com/rstudio/shiny/issues/2324))}

\item{\code{date_ref}}{data frame with reference dates. Note: this is
experimental, needs testing to see if more efficient to calculate these
dates as required on the fly rather than holding as a data frame (used
for grouping time periods as well as filtering).}

\item{\code{stats19}}{stats19 data set from stats19 package}

\item{\code{metric_meta}}{data frame contain meta data for metrics
Method 1: initialize object}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-app_data-new}{\code{app_data$new()}}
\item \href{#method-app_data-filter_ref_date}{\code{app_data$filter_ref_date()}}
\item \href{#method-app_data-app_metrics}{\code{app_data$app_metrics()}}
\item \href{#method-app_data-clone}{\code{app_data$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-app_data-new"></a>}}
\if{latex}{\out{\hypertarget{method-app_data-new}{}}}
\subsection{Method \code{new()}}{
Create R6 class object to get data for App.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{app_data$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-app_data-filter_ref_date"></a>}}
\if{latex}{\out{\hypertarget{method-app_data-filter_ref_date}{}}}
\subsection{Method \code{filter_ref_date()}}{
Filter dates from Date Range & Period UI input.

Note: currently filters using a reference data frame, needs testing against
approach that does it on the fly.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{app_data$filter_ref_date(period, start, end)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{period}}{period input from UI}

\item{\code{start}}{start date}

\item{\code{end}}{end date}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-app_data-app_metrics"></a>}}
\if{latex}{\out{\hypertarget{method-app_data-app_metrics}{}}}
\subsection{Method \code{app_metrics()}}{
Calculate dashboard metrics

Function gets metric data. Either calculated within function, or calls
another function where more complex.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{app_data$app_metrics(metric_ids, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{metric_ids}}{ID of the metric to be used}

\item{\code{...}}{other fields to group data by}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-app_data-clone"></a>}}
\if{latex}{\out{\hypertarget{method-app_data-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{app_data$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
